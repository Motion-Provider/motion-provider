import Head from "next/head";
import React from "react";
import { motion as m } from "motion/react";

export default function Home() {
  const { onReverse, control } = useAnimationControl();
  const { isAnimationStopped, reverse } = useAnimation(control);

  return (
    <>
      <Head>
        <title>Motion Provider</title>
      </Head>
      <main className="flex flex-col items-center justify-center gap-6 h-auto overflow-y-scroll w-full mx-auto max-w-5xl p-8 border-x border-lime-400 relative">
        <m.div
          transition={{
            ease: "backIn",
          }}
        ></m.div>
        <MotionText_04973a
          isAnimationStopped={isAnimationStopped}
          reverse={reverse}
        />
        <MotionContainer_a7035b
          isAnimationStopped={isAnimationStopped}
          reverse={reverse}
        />
        <MotionChain_fff588
          isAnimationStopped={isAnimationStopped}
          reverse={reverse}
        />
        <MotionImage_4cdbe0
          isAnimationStopped={isAnimationStopped}
          reverse={reverse}
        />
        <div className="fixed bottom-4 w-60 h-24 border border-lime-400 flex flex-row gap-4 items-center justify-between bg-white rounded-2xl z-[9999]">
          <button
            className="w-1/2 h-full bg-lime-400 cursor-pointer"
            onClick={onReverse}
          >
            Reverse
          </button>
        </div>
      </main>
    </>
  );
}

/*
This code is generated by the playground 
engine and matches with the current state 
of the animation. You can copy&paste, 
ready-to-use in seconds!
*/
import MotionContainer from "@/motion/motion-container";

export function MotionContainer_a7035b({
  reverse,
  isAnimationStopped,
}: {
  reverse: boolean;
  isAnimationStopped: boolean;
}) {
  return (
    <MotionContainer
      elementType="div"
      animation={{
        mode: "fadeDown",
        transition: "smooth",
        duration: 1,
      }}
      controller={{
        reverse,
        isAnimationStopped,
      }}
      className="size-24 rounded-lg bg-lime-400"
    />
  );
}

/*
This code is generated by the playground 
engine and matches with the current state 
of the animation. You can copy&paste, 
ready-to-use in seconds!
*/

import MotionChain from "@/motion/motion-chain";
import { MotionAnimationProps } from "@/motion/types";

const items = Array.from({ length: 5 }, (_, i) => (
  <div
    className="size-12 my-1 rounded-2xl bg-stone-700 text-white grid place-items-center"
    key={i}
  >
    {i + 1}
  </div>
));
const animations = items.map(() => ({
  mode: ["scaleZoomIn", "fadeIn"],
  transition: "cubicBounce",
  duration: 2.5,
})) as MotionAnimationProps[];

export function MotionChain_fff588({
  reverse,
  isAnimationStopped,
}: {
  reverse: boolean;
  isAnimationStopped: boolean;
}) {
  return (
    <MotionChain
      animations={animations}
      controller={{
        isAnimationStopped,
        reverse,
      }}
      config={{
        duration: 0.15,
        delayLogic: "linear",
      }}
      elementType="div"
    >
      {items}
    </MotionChain>
  );
}

/*
This code is generated by the playground 
engine and matches with the current state 
of the animation. You can copy&paste, 
ready-to-use in seconds!
*/
import MotionImage from "@/motion/motion-image";

export function MotionImage_4cdbe0({
  reverse,
  isAnimationStopped,
}: {
  reverse: boolean;
  isAnimationStopped: boolean;
}) {
  return (
    <MotionImage
      animation={{
        mode: ["flip3D", "rotateSwing"],
        transition: "cubicElastic",
        duration: 1,
      }}
      config={{
        duration: 2,
        // example image from unsplash
        img: "https://images.unsplash.com/photo-1486848538113-ce1a4923fbc5?q=80&w=749&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
        delayLogic: "cosine",
        pieces: 16,
      }}
      controller={{
        isAnimationStopped,
        reverse,
      }}
      wrapperClassName="size-[500px] rounded-lg overflow-hidden"
      fallback={
        <div className="size-96 animate-pulse bg-stone-800 rounded-lg" />
      }
    />
  );
}

/*
This code is generated by the playground 
engine and matches with the current state 
of the animation. You can copy&paste, 
ready-to-use in seconds!
*/

export function MotionImage_942ae5({
  reverse,
  isAnimationStopped,
}: {
  reverse: boolean;
  isAnimationStopped: boolean;
}) {
  return (
    <MotionImage
      animation={{
        mode: ["filterSepiaTone", "rotateFlipX"],
        transition: "slowSmooth",
        duration: 0.24,
      }}
      config={{
        duration: 0.88,
        img: "https://images.unsplash.com/photo-1486848538113-ce1a4923fbc5?q=80&w=749&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
        delayLogic: "perlin",
        pieces: 64,
      }}
      controller={{
        isAnimationStopped,
        reverse,
      }}
      wrapperClassName="size-[500px] rounded-lg overflow-hidden"
      fallback={
        <div className="size-96 animate-pulse bg-stone-800 rounded-lg" />
      }
    />
  );
}

/*
This code is generated by the playground 
engine and matches with the current state 
of the animation. You can copy&paste, 
ready-to-use in seconds!
*/
import MotionText from "@/motion/motion-text";
import { useAnimationControl } from "@/motion/hooks/use-animation-control";
import { useAnimation } from "@/motion/hooks/use-animation";

export function MotionText_04973a({
  reverse,
  isAnimationStopped,
}: {
  reverse: boolean;
  isAnimationStopped: boolean;
}) {
  return (
    <MotionText
      elementType="p"
      animation={{
        mode: ["fadeUp", "filterBlurIn"],
        transition: "smooth",
        duration: 1,
      }}
      config={{
        duration: 0.12,
        mode: "chars",
        delayLogic: "linear",
      }}
      controller={{
        isAnimationStopped,
        reverse,
      }}
    >
      Tempor proident nisi deserunt dolore. Eu deserunt labore sunt et ullamco.
      Magna id Lorem labore ipsum adipisicing. Non laboris aliquip cillum
      excepteur dolore dolore sint et adipisicing pariatur voluptate. Eu ex anim
      aute aliqua pariatur.
    </MotionText>
  );
}
